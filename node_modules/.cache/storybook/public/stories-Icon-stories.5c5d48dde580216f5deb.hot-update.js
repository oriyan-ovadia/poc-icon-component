"use strict";
self["webpackHotUpdatepoc_icon_component"]("stories-Icon-stories",{

/***/ "./src/stories/Icon.stories.tsx":
/*!**************************************!*\
  !*** ./src/stories/Icon.stories.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllIcons": () => (/* binding */ AllIcons),
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon */ "./src/stories/Icon.tsx");
/* harmony import */ var copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! copy-to-clipboard */ "./node_modules/copy-to-clipboard/index.js");
/* harmony import */ var copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Icon_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Icon.types */ "./src/stories/Icon.types.ts");
/* harmony import */ var _components_Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Tooltip */ "./src/components/Tooltip.tsx");
/* harmony import */ var _hooks_useDebounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useDebounce */ "./src/hooks/useDebounce.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
var _Primary$parameters, _Primary$parameters2, _Primary$parameters2$, _AllIcons$parameters, _AllIcons$parameters2, _AllIcons$parameters3;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








var meta = {
  title: "Components/Icon",
  component: _Icon__WEBPACK_IMPORTED_MODULE_1__.Icon,
  tags: ["autodocs"]
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
var Primary = {
  render: function render(args) {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _objectSpread({}, args));
  },
  args: {
    icon: "trash"
  }
};
var AllIconsComponent = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_ref) {
  var icons = _ref.icons;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
    _useState2 = _slicedToArray(_useState, 2),
    copiedIconName = _useState2[0],
    setCopiedIconName = _useState2[1];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    var timeout;
    if (copiedIconName) {
      timeout = setTimeout(function () {
        setCopiedIconName("");
      }, 1000);
    }
    return function () {
      clearTimeout(timeout);
    };
  }, [copiedIconName]);
  function _onClick(iconName) {
    copy_to_clipboard__WEBPACK_IMPORTED_MODULE_2___default()(iconName);
    if (copiedIconName !== iconName || !copiedIconName) {
      setCopiedIconName(iconName);
    }
  }
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {
    className: "icon-grid",
    children: icons.map(function (iconName) {
      var isCopied = iconName === copiedIconName;
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {
        className: "icon-btn-wrapper",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Tooltip, {
          content: isCopied ? "Copied to clipboard" : iconName,
          isOpen: copiedIconName && isCopied ? true : undefined,
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button", {
            className: "icon-btn",
            onClick: function onClick() {
              return _onClick(iconName);
            },
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_1__.Icon, {
              icon: iconName,
              size: "lg"
            })
          })
        })
      });
    })
  });
});
var AllIcons = {
  render: function render(args) {
    var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_Icon_types__WEBPACK_IMPORTED_MODULE_6__.iconsArr),
      _useState4 = _slicedToArray(_useState3, 2),
      icons = _useState4[0],
      setIcons = _useState4[1];
    var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
      _useState6 = _slicedToArray(_useState5, 2),
      searchQuery = _useState6[0],
      setSearchQuery = _useState6[1];
    var debouncedSearchQuery = (0,_hooks_useDebounce__WEBPACK_IMPORTED_MODULE_4__.useDebounce)(searchQuery, 500);
    function onSearch(event) {
      var value = event.target.value;
      setSearchQuery(value);
    }
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      var filteredIcons = _Icon_types__WEBPACK_IMPORTED_MODULE_6__.iconsArr.filter(function (iconName) {
        return iconName.includes(debouncedSearchQuery);
      });
      setIcons(filteredIcons);
    }, [debouncedSearchQuery]);
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ThemeProvider, {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("form", {
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TextInput, {
          id: "AllIcons_search",
          label: "Search icon",
          onChange: onSearch,
          value: searchQuery
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AllIconsComponent, {
        icons: icons
      })]
    });
  },
  // @ts-ignore
  args: {}
};
Primary.parameters = _objectSpread(_objectSpread({}, Primary.parameters), {}, {
  docs: _objectSpread(_objectSpread({}, (_Primary$parameters = Primary.parameters) === null || _Primary$parameters === void 0 ? void 0 : _Primary$parameters.docs), {}, {
    source: _objectSpread({
      originalSource: "{\n  render: args => {\n    return <Icon {...args}></Icon>;\n  },\n  args: {\n    icon: \"trash\"\n  }\n}"
    }, (_Primary$parameters2 = Primary.parameters) === null || _Primary$parameters2 === void 0 ? void 0 : (_Primary$parameters2$ = _Primary$parameters2.docs) === null || _Primary$parameters2$ === void 0 ? void 0 : _Primary$parameters2$.source)
  })
});
AllIcons.parameters = _objectSpread(_objectSpread({}, AllIcons.parameters), {}, {
  docs: _objectSpread(_objectSpread({}, (_AllIcons$parameters = AllIcons.parameters) === null || _AllIcons$parameters === void 0 ? void 0 : _AllIcons$parameters.docs), {}, {
    source: _objectSpread({
      originalSource: "{\n  render: args => {\n    const [icons, setIcons] = useState(iconsArr);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const debouncedSearchQuery = useDebounce(searchQuery, 500);\n    function onSearch(event: React.ChangeEvent<HTMLInputElement>) {\n      const {\n        value\n      } = event.target;\n      setSearchQuery(value);\n    }\n    useEffect(() => {\n      const filteredIcons = iconsArr.filter(iconName => {\n        return iconName.includes(debouncedSearchQuery);\n      });\n      setIcons(filteredIcons);\n    }, [debouncedSearchQuery]);\n    return <ThemeProvider>\n        <form>\n          <TextInput id=\"AllIcons_search\" label=\"Search icon\" onChange={onSearch} value={searchQuery} />\n        </form>\n        <AllIconsComponent icons={icons} />\n      </ThemeProvider>;\n  },\n  // @ts-ignore\n  args: {}\n}"
    }, (_AllIcons$parameters2 = AllIcons.parameters) === null || _AllIcons$parameters2 === void 0 ? void 0 : (_AllIcons$parameters3 = _AllIcons$parameters2.docs) === null || _AllIcons$parameters3 === void 0 ? void 0 : _AllIcons$parameters3.source)
  })
});
var __namedExportsOrder = ["Primary", "AllIcons"];

/***/ }),

/***/ "./src/stories/Icon.types.ts":
/*!***********************************!*\
  !*** ./src/stories/Icon.types.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iconsArr": () => (/* binding */ iconsArr)
/* harmony export */ });
var iconsArr = ["accessibility", "activity", "air-vent", "airplay", "alarm-check", "alarm-clock-off", "alarm-clock", "alarm-minus", "alarm-plus", "album", "alert-circle", "alert-octagon", "alert-triangle", "align-center-horizontal", "align-center-vertical", "align-center", "align-end-horizontal", "align-end-vertical", "align-horizontal-distribute-center", "align-horizontal-distribute-end", "align-horizontal-distribute-start", "align-horizontal-justify-center", "align-horizontal-justify-end", "align-horizontal-justify-start", "align-horizontal-space-around", "align-horizontal-space-between", "align-justify", "align-left", "align-right", "align-start-horizontal", "align-start-vertical", "align-vertical-distribute-center", "align-vertical-distribute-end", "align-vertical-distribute-start", "align-vertical-justify-center", "align-vertical-justify-end", "align-vertical-justify-start", "align-vertical-space-around", "align-vertical-space-between", "anchor", "angry", "annoyed", "aperture", "apple", "archive-restore", "archive", "armchair", "arrow-big-down", "arrow-big-left", "arrow-big-right", "arrow-big-up", "arrow-down-circle", "arrow-down-left-from-circle", "arrow-down-left", "arrow-down-right-from-circle", "arrow-down-right", "arrow-down", "arrow-left-circle", "arrow-left-right", "arrow-left", "arrow-right-circle", "arrow-right", "arrow-up-circle", "arrow-up-down", "arrow-up-left-from-circle", "arrow-up-left", "arrow-up-right-from-circle", "arrow-up-right", "arrow-up", "asterisk", "at-sign", "atom", "award", "axe", "baby", "backpack", "baggage-claim", "ban", "banana", "banknote", "bar-chart-2", "bar-chart-3", "bar-chart-4", "bar-chart-horizontal", "bar-chart", "baseline", "bath", "battery-charging", "battery-full", "battery-low", "battery-medium", "battery-warning", "battery", "beaker", "bean-off", "bean", "bed-double", "bed-single", "bed", "beef", "beer", "bell-minus", "bell-off", "bell-plus", "bell-ring", "bell", "bike", "binary", "bird", "bitcoin", "blinds", "bluetooth-connected", "bluetooth-off", "bluetooth-searching", "bluetooth", "bold", "bomb", "bone", "book-copy", "book-down", "book-key", "book-lock", "book-marked", "book-minus", "book-open-check", "book-open", "book-plus", "book-template", "book-up", "book-x", "book", "bookmark-minus", "bookmark-plus", "bookmark", "bot", "box-select", "box", "boxes", "brain-circuit", "brain-cog", "brain", "briefcase", "brush", "bug", "building-2", "building", "bus", "cake", "calculator", "calendar-check-2", "calendar-check", "calendar-clock", "calendar-days", "calendar-heart", "calendar-minus", "calendar-off", "calendar-plus", "calendar-range", "calendar-search", "calendar-x-2", "calendar-x", "calendar", "camera-off", "camera", "candy-off", "candy", "car", "carrot", "case-lower", "case-sensitive", "case-upper", "cast", "castle", "cat", "check-check", "check-circle-2", "check-circle", "check-square", "check", "chef-hat", "cherry", "chevron-down-square", "chevron-down", "chevron-first", "chevron-last", "chevron-left-square", "chevron-left", "chevron-right-square", "chevron-right", "chevron-up-square", "chevron-up", "chevrons-down-up", "chevrons-down", "chevrons-left-right", "chevrons-left", "chevrons-right-left", "chevrons-right", "chevrons-up-down", "chevrons-up", "chrome", "church", "cigarette-off", "cigarette", "circle-dot", "circle-ellipsis", "circle-equal", "circle-off", "circle-slash-2", "circle-slash", "circle", "circuit-board", "citrus", "clapperboard", "clipboard-check", "clipboard-copy", "clipboard-edit", "clipboard-list", "clipboard-paste", "clipboard-signature", "clipboard-type", "clipboard-x", "clipboard", "clock-1", "clock-10", "clock-11", "clock-12", "clock-2", "clock-3", "clock-4", "clock-5", "clock-6", "clock-7", "clock-8", "clock-9", "clock", "cloud-cog", "cloud-drizzle", "cloud-fog", "cloud-hail", "cloud-lightning", "cloud-moon-rain", "cloud-moon", "cloud-off", "cloud-rain-wind", "cloud-rain", "cloud-snow", "cloud-sun-rain", "cloud-sun", "cloud", "cloudy", "clover", "code-2", "code", "codepen", "codesandbox", "coffee", "cog", "coins", "columns", "command", "compass", "component", "concierge-bell", "construction", "contact", "contrast", "cookie", "copy-check", "copy-minus", "copy-plus", "copy-slash", "copy-x", "copy", "copyleft", "copyright", "corner-down-left", "corner-down-right", "corner-left-down", "corner-left-up", "corner-right-down", "corner-right-up", "corner-up-left", "corner-up-right", "cpu", "creative-commons", "credit-card", "croissant", "crop", "cross", "crosshair", "crown", "cup-soda", "curly-braces", "currency", "database-backup", "database", "delete", "diamond", "dice-1", "dice-2", "dice-3", "dice-4", "dice-5", "dice-6", "dices", "diff", "disc-2", "disc", "divide-circle", "divide-square", "divide", "dna-off", "dna", "dog", "dollar-sign", "door-closed", "door-open", "download-cloud", "download", "dribbble", "droplet", "droplets", "drumstick", "dumbbell", "ear-off", "ear", "edit-2", "edit-3", "edit", "egg-fried", "egg-off", "egg", "equal-not", "equal", "eraser", "euro", "expand", "external-link", "eye-off", "eye", "facebook", "factory", "fan", "fast-forward", "feather", "figma", "file-archive", "file-audio-2", "file-audio", "file-badge-2", "file-badge", "file-bar-chart-2", "file-bar-chart", "file-box", "file-check-2", "file-check", "file-clock", "file-code", "file-cog-2", "file-cog", "file-diff", "file-digit", "file-down", "file-edit", "file-heart", "file-image", "file-input", "file-json-2", "file-json", "file-key-2", "file-key", "file-line-chart", "file-lock-2", "file-lock", "file-minus-2", "file-minus", "file-output", "file-pie-chart", "file-plus-2", "file-plus", "file-question", "file-scan", "file-search-2", "file-search", "file-signature", "file-spreadsheet", "file-symlink", "file-terminal", "file-text", "file-type-2", "file-type", "file-up", "file-video-2", "file-video", "file-volume-2", "file-volume", "file-warning", "file-x-2", "file-x", "file", "files", "film", "filter-x", "filter", "fingerprint", "fish-off", "fish", "flag-off", "flag-triangle-left", "flag-triangle-right", "flag", "flame", "flashlight-off", "flashlight", "flask-conical-off", "flask-conical", "flask-round", "flip-horizontal-2", "flip-horizontal", "flip-vertical-2", "flip-vertical", "flower-2", "flower", "focus", "folder-archive", "folder-check", "folder-clock", "folder-closed", "folder-cog-2", "folder-cog", "folder-down", "folder-edit", "folder-git-2", "folder-git", "folder-heart", "folder-input", "folder-key", "folder-lock", "folder-minus", "folder-open", "folder-output", "folder-plus", "folder-search-2", "folder-search", "folder-symlink", "folder-tree", "folder-up", "folder-x", "folder", "folders", "footprints", "forklift", "form-input", "forward", "frame", "framer", "frown", "fuel", "function-square", "gamepad-2", "gamepad", "gauge", "gavel", "gem", "ghost", "gift", "git-branch-plus", "git-branch", "git-commit", "git-compare", "git-fork", "git-merge", "git-pull-request-closed", "git-pull-request-draft", "git-pull-request", "github", "gitlab", "glass-water", "glasses", "globe-2", "globe", "grab", "graduation-cap", "grape", "grid", "grip-horizontal", "grip-vertical", "grip", "hammer", "hand-metal", "hand", "hard-drive", "hard-hat", "hash", "haze", "heading-1", "heading-2", "heading-3", "heading-4", "heading-5", "heading-6", "heading", "headphones", "heart-crack", "heart-handshake", "heart-off", "heart-pulse", "heart", "help-circle", "helping-hand", "hexagon", "highlighter", "history", "home", "hop-off", "hop", "hotel", "hourglass", "ice-cream-2", "ice-cream", "image-minus", "image-off", "image-plus", "image", "import", "inbox", "indent", "indian-rupee", "infinity", "info", "inspect", "instagram", "italic", "japanese-yen", "joystick", "key", "keyboard", "lamp-ceiling", "lamp-desk", "lamp-floor", "lamp-wall-down", "lamp-wall-up", "lamp", "landmark", "languages", "laptop-2", "laptop", "lasso-select", "lasso", "laugh", "layers", "layout-grid", "layout-list", "layout-template", "layout", "leaf", "library", "life-buoy", "lightbulb-off", "lightbulb", "line-chart", "link2-off", "link-2", "link", "linkedin", "list-checks", "list-end", "list-minus", "list-music", "list-ordered", "list-plus", "list-start", "list-tree", "list-video", "list-x", "list", "loader-2", "loader", "locate-fixed", "locate-off", "locate", "lock", "log-in", "log-out", "luggage", "magnet", "mail-check", "mail-minus", "mail-open", "mail-plus", "mail-question", "mail-search", "mail-warning", "mail-x", "mail", "mailbox", "mails", "map-pin-off", "map-pin", "map", "martini", "maximize-2", "maximize", "medal", "megaphone-off", "megaphone", "meh", "menu", "message-circle", "message-square-plus", "message-square", "messages-square", "mic-2", "mic-off", "mic", "microscope", "microwave", "milestone", "milk-off", "milk", "minimize-2", "minimize", "minus-circle", "minus-square", "minus", "monitor-off", "monitor-smartphone", "monitor-speaker", "monitor", "moon", "more-horizontal", "more-vertical", "mountain-snow", "mountain", "mouse-pointer-2", "mouse-pointer-click", "mouse-pointer", "mouse", "move-diagonal-2", "move-diagonal", "move-horizontal", "move-vertical", "move", "music-2", "music-3", "music-4", "music", "navigation2-off", "navigation-2", "navigation-off", "navigation", "network", "newspaper", "nfc", "nut-off", "nut", "octagon", "option", "orbit", "outdent", "package-2", "package-check", "package-minus", "package-open", "package-plus", "package-search", "package-x", "package", "paint-bucket", "paintbrush-2", "paintbrush", "palette", "palmtree", "paperclip", "parking-circle-off", "parking-circle", "parking-square-off", "parking-square", "party-popper", "pause-circle", "pause-octagon", "pause", "pen-tool", "pencil", "percent", "person-standing", "phone-call", "phone-forwarded", "phone-incoming", "phone-missed", "phone-off", "phone-outgoing", "phone", "picture-in-picture-2", "picture-in-picture", "pie-chart", "piggy-bank", "pilcrow", "pill", "pin-off", "pin", "pipette", "pizza", "plane-landing", "plane-takeoff", "plane", "play-circle", "play", "plug-2", "plug-zap", "plug", "plus-circle", "plus-square", "plus", "pocket", "podcast", "pointer", "pound-sterling", "power-off", "power", "printer", "puzzle", "qr-code", "quote", "radio-receiver", "radio-tower", "radio", "rat", "receipt", "rectangle-horizontal", "rectangle-vertical", "recycle", "redo-2", "redo", "refresh-ccw", "refresh-cw", "refrigerator", "regex", "remove-formatting", "repeat1", "repeat-2", "repeat", "replace-all", "replace", "reply-all", "reply", "rewind", "rocket", "rocking-chair", "rotate3d", "rotate-ccw", "rotate-cw", "router", "rss", "ruler", "russian-ruble", "sailboat", "salad", "sandwich", "save", "scale3d", "scale", "scaling", "scan-face", "scan-line", "scan", "school-2", "school", "scissors", "screen-share-off", "screen-share", "scroll", "search", "send", "separator-horizontal", "separator-vertical", "server-cog", "server-crash", "server-off", "server", "settings-2", "settings", "share-2", "share", "sheet", "shield-alert", "shield-check", "shield-close", "shield-off", "shield", "ship", "shirt", "shopping-bag", "shopping-cart", "shovel", "shower-head", "shrink", "shrub", "shuffle", "sidebar-close", "sidebar-open", "sidebar", "sigma", "signal-high", "signal-low", "signal-medium", "signal-zero", "signal", "siren", "skip-back", "skip-forward", "skull", "slack", "slice", "sliders-horizontal", "sliders", "smartphone-charging", "smartphone-nfc", "smartphone", "smile-plus", "smile", "snowflake", "sofa", "soup", "space", "speaker", "spline", "split-square-horizontal", "split-square-vertical", "sprout", "square", "stamp", "star-half", "star-off", "star", "step-back", "step-forward", "stethoscope", "sticker", "sticky-note", "stop-circle", "store", "stretch-horizontal", "stretch-vertical", "strikethrough", "subscript", "subtitles", "sun-dim", "sun-medium", "sun-moon", "sun-snow", "sun", "sunrise", "sunset", "superscript", "swiss-franc", "switch-camera", "sword", "swords", "syringe", "table-2", "table", "tablet", "tablets", "tag", "tags", "target", "tent", "terminal-square", "terminal", "test-tube-2", "test-tube", "test-tubes", "text-cursor-input", "text-cursor", "text-selection", "text", "thermometer-snowflake", "thermometer-sun", "thermometer", "thumbs-down", "thumbs-up", "ticket", "timer-off", "timer-reset", "timer", "toggle-left", "toggle-right", "tornado", "tower-control", "toy-brick", "train", "trash-2", "trash", "tree-deciduous", "tree-pine", "trees", "trello", "trending-down", "trending-up", "triangle", "trophy", "truck", "tv-2", "tv", "twitch", "twitter", "type", "umbrella", "underline", "undo-2", "undo", "unlink-2", "unlink", "unlock", "upload-cloud", "upload", "usb", "user-check", "user-cog", "user-minus", "user-plus", "user-x", "user", "users", "utensils-crossed", "utensils", "utility-pole", "vegan", "venetian-mask", "verified", "vibrate-off", "vibrate", "video-off", "video", "view", "voicemail", "volume-1", "volume-2", "volume-x", "volume", "vote", "wallet", "wand-2", "wand", "warehouse", "watch", "waves", "webcam", "webhook", "wheat-off", "wheat", "whole-word", "wifi-off", "wifi", "wind", "wine-off", "wine", "wrap-text", "wrench", "x-circle", "x-octagon", "x-square", "x", "youtube", "zap-off", "zap", "zoom-in", "zoom-out"];

/***/ })

});
//# sourceMappingURL=stories-Icon-stories.5c5d48dde580216f5deb.hot-update.js.map