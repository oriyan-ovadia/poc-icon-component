{"version":3,"file":"components-Icon-Icon-stories.f43055bdbd0e25241e14.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAPA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AAxBA","sources":["webpack://poc-icon-component/./src/components/Icon/Icon.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cc from 'classcat';\nimport { IconType } from './Icon.types';\nimport './Icon.css';\n\nexport interface IconProps extends React.HTMLAttributes<HTMLSpanElement> {\n  icon: IconType;\n  size?: 'sm' | 'md' | 'lg';\n}\n\n/**\n * Icons can be used to represent concepts or provide context to options and/or actions within an experience.\n */\nexport const Icon = ({ icon, size = 'md', ...restProps }: IconProps) => {\n  const [LazyIcon, setLazyIcon] = useState(null);\n\n  useEffect(() => {\n    const importIcon = async () => {\n      try {\n        const { default: importedIcon } = await import(`./icons/${icon}.svg`);\n        setLazyIcon(importedIcon);\n      } catch (error) {\n        console.warn(`Failed to load icon: \\`${icon}\\``);\n      }\n    };\n    importIcon();\n  }, [icon]);\n\n  if (!LazyIcon) {\n    return null;\n  }\n\n  return (\n    <span className={cc(['icon_root', `icon--${size}`])} {...restProps}>\n      {LazyIcon}\n    </span>\n  );\n};\n"],"names":[],"sourceRoot":""}