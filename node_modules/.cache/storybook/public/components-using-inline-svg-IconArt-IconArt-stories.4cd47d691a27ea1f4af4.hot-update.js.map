{"version":3,"file":"components-using-inline-svg-IconArt-IconArt-stories.4cd47d691a27ea1f4af4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAPA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AAxBA","sources":["webpack://poc-icon-component/./src/components/using-inline-svg/IconArt/IconArt.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cc from 'classcat';\nimport { IconArtType, ThemeType } from './IconArt.types';\nimport './IconArt.css';\n\nexport interface IconProps extends React.HTMLAttributes<HTMLSpanElement> {\n  icon: IconArtType;\n  size?: 'sm' | 'md' | 'lg';\n  theme?: ThemeType;\n}\n\n/**\n * IconArt component displays delightful and artistic illustration icons, enhancing the overall user experience with a touch of visual charm.\n *\n * They're loaded using [SVGR](https://react-svgr.com/) and minified using [SVGO](https://github.com/svg/svgo).\n */\nexport const IconArt = ({ icon, size = 'md', theme = 'light', ...restProps }: IconProps) => {\n  const [LazyIcon, setLazyIcon] = useState(null);\n\n  useEffect(() => {\n    const importIcon = async () => {\n      try {\n        const { default: importedIcon } = await import(`./icons/${icon}-art-${theme}.svg`);\n        setLazyIcon(importedIcon);\n      } catch (error) {\n        console.warn(`Failed to load icon: \\`${icon}\\``);\n      }\n    };\n    importIcon();\n  }, [icon, theme]);\n\n  if (!LazyIcon) {\n    return null;\n  }\n\n  return (\n    <span className={cc(['IconArt_root', `IconArt--${size}`])} {...restProps}>\n      {LazyIcon}\n    </span>\n  );\n};\n"],"names":[],"sourceRoot":""}