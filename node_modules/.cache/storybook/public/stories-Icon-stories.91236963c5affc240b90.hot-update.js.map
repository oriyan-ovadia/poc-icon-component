{"version":3,"file":"stories-Icon-stories.91236963c5affc240b90.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA","sources":["webpack://poc-icon-component/./node_modules/@linaria/core/dist/index.mjs"],"sourcesContent":["// src/css.ts\nvar idx = 0;\nvar css = () => {\n  if (process.env.NODE_ENV === \"test\") {\n    return `mocked-css-${idx++}`;\n  }\n  throw new Error(\n    'Using the \"css\" tag in runtime is not supported. Make sure you have set up the Babel plugin correctly.'\n  );\n};\nvar css_default = css;\n\n// src/cx.ts\nvar cx = function cx2() {\n  const presentClassNames = Array.prototype.slice.call(arguments).filter(Boolean);\n  const atomicClasses = {};\n  const nonAtomicClasses = [];\n  presentClassNames.forEach((arg) => {\n    const individualClassNames = arg ? arg.split(\" \") : [];\n    individualClassNames.forEach((className) => {\n      if (className.startsWith(\"atm_\")) {\n        const [, keyHash] = className.split(\"_\");\n        atomicClasses[keyHash] = className;\n      } else {\n        nonAtomicClasses.push(className);\n      }\n    });\n  });\n  const result = [];\n  for (const keyHash in atomicClasses) {\n    if (Object.prototype.hasOwnProperty.call(atomicClasses, keyHash)) {\n      result.push(atomicClasses[keyHash]);\n    }\n  }\n  result.push(...nonAtomicClasses);\n  return result.join(\" \");\n};\nvar cx_default = cx;\nexport {\n  css_default as css,\n  cx_default as cx\n};\n//# sourceMappingURL=index.mjs.map"],"names":[],"sourceRoot":""}